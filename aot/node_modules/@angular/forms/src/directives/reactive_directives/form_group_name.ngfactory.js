/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
System.register(["@angular/forms/src/directives/reactive_directives/form_group_name", "@angular/core/src/change_detection/change_detection_util", "@angular/core/src/linker/view_utils"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var import0, import1, import3, Wrapper_FormGroupName, Wrapper_FormArrayName;
    return {
        setters: [
            function (import0_1) {
                import0 = import0_1;
            },
            function (import1_1) {
                import1 = import1_1;
            },
            function (import3_1) {
                import3 = import3_1;
            }
        ],
        execute: function () {/**
             * @fileoverview This file is generated by the Angular 2 template compiler.
             * Do not edit.
             * @suppress {suspiciousCode,uselessCode,missingProperties}
             */
            /* tslint:disable */
            Wrapper_FormGroupName = (function () {
                function Wrapper_FormGroupName(p0, p1, p2) {
                    this._changed = false;
                    this.context = new import0.FormGroupName(p0, p1, p2);
                    this._expr_0 = import1.UNINITIALIZED;
                }
                Wrapper_FormGroupName.prototype.ngOnDetach = function (view, componentView, el) {
                };
                Wrapper_FormGroupName.prototype.ngOnDestroy = function () {
                };
                Wrapper_FormGroupName.prototype.check_name = function (currValue, throwOnChange, forceUpdate) {
                    if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
                        this._changed = true;
                        this.context.name = currValue;
                        this._expr_0 = currValue;
                    }
                };
                Wrapper_FormGroupName.prototype.ngDoCheck = function (view, el, throwOnChange) {
                    var changed = this._changed;
                    this._changed = false;
                    return changed;
                };
                Wrapper_FormGroupName.prototype.checkHost = function (view, componentView, el, throwOnChange) {
                };
                Wrapper_FormGroupName.prototype.handleEvent = function (eventName, $event) {
                    var result = true;
                    return result;
                };
                Wrapper_FormGroupName.prototype.subscribe = function (view, _eventHandler) {
                    this._eventHandler = _eventHandler;
                };
                return Wrapper_FormGroupName;
            }());
            exports_1("Wrapper_FormGroupName", Wrapper_FormGroupName);
            Wrapper_FormArrayName = (function () {
                function Wrapper_FormArrayName(p0, p1, p2) {
                    this._changed = false;
                    this.context = new import0.FormArrayName(p0, p1, p2);
                    this._expr_0 = import1.UNINITIALIZED;
                }
                Wrapper_FormArrayName.prototype.ngOnDetach = function (view, componentView, el) {
                };
                Wrapper_FormArrayName.prototype.ngOnDestroy = function () {
                    this.context.ngOnDestroy();
                };
                Wrapper_FormArrayName.prototype.check_name = function (currValue, throwOnChange, forceUpdate) {
                    if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
                        this._changed = true;
                        this.context.name = currValue;
                        this._expr_0 = currValue;
                    }
                };
                Wrapper_FormArrayName.prototype.ngDoCheck = function (view, el, throwOnChange) {
                    var changed = this._changed;
                    this._changed = false;
                    if (!throwOnChange) {
                        if ((view.numberOfChecks === 0)) {
                            this.context.ngOnInit();
                        }
                    }
                    return changed;
                };
                Wrapper_FormArrayName.prototype.checkHost = function (view, componentView, el, throwOnChange) {
                };
                Wrapper_FormArrayName.prototype.handleEvent = function (eventName, $event) {
                    var result = true;
                    return result;
                };
                Wrapper_FormArrayName.prototype.subscribe = function (view, _eventHandler) {
                    this._eventHandler = _eventHandler;
                };
                return Wrapper_FormArrayName;
            }());
            exports_1("Wrapper_FormArrayName", Wrapper_FormArrayName);
        }
    };
});
//# sourceMappingURL=form_group_name.ngfactory.js.map