/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
System.register(["@angular/forms/src/directives/number_value_accessor"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var import0, Wrapper_NumberValueAccessor;
    return {
        setters: [
            function (import0_1) {
                import0 = import0_1;
            }
        ],
        execute: function () {/**
             * @fileoverview This file is generated by the Angular 2 template compiler.
             * Do not edit.
             * @suppress {suspiciousCode,uselessCode,missingProperties}
             */
            /* tslint:disable */
            Wrapper_NumberValueAccessor = (function () {
                function Wrapper_NumberValueAccessor(p0, p1) {
                    this._changed = false;
                    this.context = new import0.NumberValueAccessor(p0, p1);
                }
                Wrapper_NumberValueAccessor.prototype.ngOnDetach = function (view, componentView, el) {
                };
                Wrapper_NumberValueAccessor.prototype.ngOnDestroy = function () {
                };
                Wrapper_NumberValueAccessor.prototype.ngDoCheck = function (view, el, throwOnChange) {
                    var changed = this._changed;
                    this._changed = false;
                    return changed;
                };
                Wrapper_NumberValueAccessor.prototype.checkHost = function (view, componentView, el, throwOnChange) {
                };
                Wrapper_NumberValueAccessor.prototype.handleEvent = function (eventName, $event) {
                    var result = true;
                    if ((eventName == 'change')) {
                        var pd_sub_0 = (this.context.onChange($event.target.value) !== false);
                        result = (pd_sub_0 && result);
                    }
                    if ((eventName == 'input')) {
                        var pd_sub_1 = (this.context.onChange($event.target.value) !== false);
                        result = (pd_sub_1 && result);
                    }
                    if ((eventName == 'blur')) {
                        var pd_sub_2 = (this.context.onTouched() !== false);
                        result = (pd_sub_2 && result);
                    }
                    return result;
                };
                Wrapper_NumberValueAccessor.prototype.subscribe = function (view, _eventHandler) {
                    this._eventHandler = _eventHandler;
                };
                return Wrapper_NumberValueAccessor;
            }());
            exports_1("Wrapper_NumberValueAccessor", Wrapper_NumberValueAccessor);
        }
    };
});
//# sourceMappingURL=number_value_accessor.ngfactory.js.map