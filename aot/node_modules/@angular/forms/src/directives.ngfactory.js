/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
System.register(["@angular/core/src/linker/ng_module_factory", "@angular/forms/src/directives"], function (exports_1, context_1) {
    "use strict";
    var __extends = (this && this.__extends) || (function () {
        var extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return function (d, b) {
            extendStatics(d, b);
            function __() { this.constructor = d; }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
    })();
    var __moduleName = context_1 && context_1.id;
    var import0, import1, InternalFormsSharedModuleInjector, InternalFormsSharedModuleNgFactory;
    return {
        setters: [
            function (import0_1) {
                import0 = import0_1;
            },
            function (import1_1) {
                import1 = import1_1;
            }
        ],
        execute: function () {/**
             * @fileoverview This file is generated by the Angular 2 template compiler.
             * Do not edit.
             * @suppress {suspiciousCode,uselessCode,missingProperties}
             */
            /* tslint:disable */
            InternalFormsSharedModuleInjector = (function (_super) {
                __extends(InternalFormsSharedModuleInjector, _super);
                function InternalFormsSharedModuleInjector(parent) {
                    return _super.call(this, parent, [], []) || this;
                }
                InternalFormsSharedModuleInjector.prototype.createInternal = function () {
                    this._InternalFormsSharedModule_0 = new import1.InternalFormsSharedModule();
                    return this._InternalFormsSharedModule_0;
                };
                InternalFormsSharedModuleInjector.prototype.getInternal = function (token, notFoundResult) {
                    if ((token === import1.InternalFormsSharedModule)) {
                        return this._InternalFormsSharedModule_0;
                    }
                    return notFoundResult;
                };
                InternalFormsSharedModuleInjector.prototype.destroyInternal = function () {
                };
                return InternalFormsSharedModuleInjector;
            }(import0.NgModuleInjector));
            exports_1("InternalFormsSharedModuleNgFactory", InternalFormsSharedModuleNgFactory = new import0.NgModuleFactory(InternalFormsSharedModuleInjector, import1.InternalFormsSharedModule));
        }
    };
});
//# sourceMappingURL=directives.ngfactory.js.map